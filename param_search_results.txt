
test_model (classifier_test.TestClassifier) ... {'split2_train_score': array([ 1.        ,  0.99243666,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ]), 'mean_fit_time': array([ 700.666785  ,  156.39146463,  748.61787915,  132.36359564,
        747.62417968,  131.53990412,  750.30564793,  131.03332257]), 'split2_test_score': array([ 0.91628845,  0.98411498,  0.92259203,  0.99117499,  0.92259203,
        0.99142713,  0.92259203,  0.99142713]), 'std_test_score': array([ 0.00251393,  0.00134079,  0.00248095,  0.00113429,  0.00248095,
        0.00120665,  0.00248095,  0.00120665]), 'param_kernel': masked_array(data = ['rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf'],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'mean_score_time': array([ 273.09441034,   76.32350111,  274.33503143,   64.43390552,
        275.41880528,   63.92849064,  274.79471072,   63.64851419]), 'split1_train_score': array([ 1.        ,  0.99294088,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ]), 'split0_test_score': array([ 0.92185531,  0.98739602,  0.92866146,  0.99092513,  0.92866146,
        0.99092513,  0.92866146,  0.99092513]), 'std_score_time': array([ 0.70013667,  1.50892724,  1.58035722,  0.96984977,  1.94175036,
        1.03758196,  1.48132897,  1.13498901]), 'split1_test_score': array([ 0.91679274,  0.98587998,  0.92536561,  0.98865356,  0.92536561,
        0.98865356,  0.92536561,  0.98865356]), 'param_C': masked_array(data = [1 1 10 10 100 100 1000 1000],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'split0_train_score': array([ 0.99962179,  0.99268785,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ]), 'mean_train_score': array([ 0.99987393,  0.99268846,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ]), 'std_train_score': array([ 0.00017829,  0.00020585,  0.        ,  0.        ,  0.        ,
        0.        ,  0.        ,  0.        ]), 'params': [{'C': 1, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 1, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 10, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 10, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 100, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 100, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 1000, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 1000, 'kernel': 'rbf', 'gamma': 0.0001}], 'param_gamma': masked_array(data = [0.001 0.0001 0.001 0.0001 0.001 0.0001 0.001 0.0001],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'rank_test_score': array([8, 4, 5, 3, 5, 1, 5, 1], dtype=int32), 'mean_test_score': array([ 0.91831246,  0.98579713,  0.92553996,  0.99025128,  0.92553996,
        0.99033532,  0.92553996,  0.99033532]), 'std_fit_time': array([ 6.23655349,  2.79307406,  5.94831863,  2.69386522,  2.92843968,
        2.72653364,  4.28867245,  3.02725484])}
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.0001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
ok
test_train (classifier_test.TestClassifier) ... {'split2_train_score': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]), 'mean_fit_time': array([ 0.00132616,  0.00106104,  0.00091426,  0.00072988,  0.00081937,
        0.0008475 ,  0.00084043,  0.00084575]), 'split2_test_score': array([ 0.5,  1. ,  0.5,  1. ,  0.5,  1. ,  0.5,  1. ]), 'std_test_score': array([ 0.18708287,  0.        ,  0.18708287,  0.        ,  0.18708287,
        0.        ,  0.18708287,  0.        ]), 'param_kernel': masked_array(data = ['rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf'],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'mean_score_time': array([ 0.00055496,  0.00059144,  0.00038528,  0.00030669,  0.0003314 ,
        0.00030907,  0.00030947,  0.00031034]), 'split1_train_score': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]), 'split0_test_score': array([ 0.75,  1.  ,  0.75,  1.  ,  0.75,  1.  ,  0.75,  1.  ]), 'std_score_time': array([  7.56417986e-05,   1.23697100e-04,   8.48964337e-05,
         3.31029027e-05,   7.96712941e-06,   3.10800868e-05,
         3.10939024e-05,   3.30192278e-05]), 'split1_test_score': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]), 'param_C': masked_array(data = [1 1 10 10 100 100 1000 1000],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'split0_train_score': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]), 'mean_train_score': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]), 'std_train_score': array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]), 'params': [{'C': 1, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 1, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 10, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 10, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 100, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 100, 'kernel': 'rbf', 'gamma': 0.0001}, {'C': 1000, 'kernel': 'rbf', 'gamma': 0.001}, {'C': 1000, 'kernel': 'rbf', 'gamma': 0.0001}], 'param_gamma': masked_array(data = [0.001 0.0001 0.001 0.0001 0.001 0.0001 0.001 0.0001],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'rank_test_score': array([5, 1, 5, 1, 5, 1, 5, 1], dtype=int32), 'mean_test_score': array([ 0.8,  1. ,  0.8,  1. ,  0.8,  1. ,  0.8,  1. ]), 'std_fit_time': array([ 0.00011176,  0.00015381,  0.0001024 ,  0.00012268,  0.0002725 ,
        0.00023439,  0.00023675,  0.00023841])}
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.0001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)